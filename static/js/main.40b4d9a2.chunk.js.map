{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useReactMediaRecorder","video","audio","status","startRecording","stopRecording","mediaBlobUrl","className","src","controls","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAyBeA,MAtBf,WACE,MACEC,gCAAsB,CAAEC,OAAO,EAAOC,OAAO,IADvCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,cAAeC,EAA/C,EAA+CA,aAE/C,OACE,sBAAKC,UAAU,MAAf,UAEE,uBAAOC,IAAKF,EAAcG,UAAQ,EAAlC,SACE,wBAAQD,IAAKF,MAEf,wBAAQI,QAASN,EAAgBO,SAAqB,cAAXR,EAA3C,6BAGA,wBAAQO,QAASL,EAAeM,SAAqB,YAAXR,EAA1C,4BAGA,yCAAYA,KACZ,+CAAkBG,KAClB,mDCRSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.40b4d9a2.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\n\nfunction App() {\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\n    useReactMediaRecorder({ video: false, audio: true });\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <audio src={mediaBlobUrl} controls>\n        <source src={mediaBlobUrl}></source>\n      </audio>\n      <button onClick={startRecording} disabled={status === \"recording\"}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={status === \"stopped\"}>\n        stop recording\n      </button>\n      <p>status: {status}</p>\n      <p>mediaBlobUrl: {mediaBlobUrl}</p>\n      <p>v: source only</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}